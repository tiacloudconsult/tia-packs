            - task: KubernetesManifest@0 #Creating imagePullSecrets on the K8s namespace
              displayName: Create imagePullSecret
              inputs:
                action: createSecret
                kubernetesServiceConnection: $(deploy_k8s_service_conn)
                secretName: $(deploy_k8s_secretName)
                namespace: $(deploy_k8s_namespace)
                dockerRegistryEndpoint: $(application_acr_service_connection)
  
            - task: KubernetesManifest@0 #Deploying to k8s namespace using the existing manifests
              displayName: Deploy to Kubernetes cluster
              inputs:
                action: deploy
                rolloutStatusTimeout: '60'
                kubernetesServiceConnection: $(deploy_k8s_service_conn)
                namespace: $(deploy_k8s_namespace)
                manifests: |
                  $(Build.SourcesDirectory)/kubernetes/*
                imagePullSecrets: |
                  $(deploy_k8s_secretName)
                  
            - task: Kubernetes@1
              condition: failed()
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceEndpoint: $(deploy_k8s_service_conn)
                namespace: $(deploy_k8s_namespace)
                command: 'rollout'
                arguments: 'undo -f $(Build.SourcesDirectory)/kubernetes/deploy.yaml'