| Framework Version | Author |
|--------|--------|
| 3.0 | QED Devops Team | 


# Pipegen Manual

Here is skeleton for Azure DevOps Pipeline.

    .
    ├── .cicd
    |   ├── azure-pipeline.yaml                 # Main Azure Pipeline 
    |   ├── deployment.yaml                     # Deployment Tool
    |   ├── publish_tag.yaml                    # Tags
    |   ├── composition_analysis.yaml           # Composition Analysis
    |   ├── static_code_analysis.yaml           # Static Code Analysis   
    |   ├── testing_capability.yaml             # Testing Tools/Capability 
    |   ├── teams_notification.yaml             # MS Teams Notification   
    |   ├── variables.yaml                      # Pipeline Variables                        
    |   └── README.md
    └── sonar-project.properties                # Sonar configuration file
    

# Prerequisite
Before Running the pipline please setup the following Azure [service connection](https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=azure-devops&tabs=yaml)
1. Upadte the Blackduck PAT token in the Pipeline library(global-variable)
2. SonarQube service connection
{% if docker_build == 'True' %}
3. Docker Registry service connection
{% endif %}
{% if deployment_tool == 'linux_binary_copy)' %}
4. SSH service connection
{% endif %}
{% if deployment_tool == 'kubernetes' %}
4. Kubernetes service connection
{% endif %}
{% if deployment_tool == 'windows_binary_copy)' %}
4. Upadte the deployment server IP,Username,Password in the Pipeline library({{ app_name }}-dev-env-variable-group)
{% endif %}
{% if deployment_tool == 'fileshare' %}
4. Upadte the deployment fileshare path,Username,Password in the Pipeline library({{ app_name }}-dev-env-variable-group)
{% endif %}

# Pipeline Stage
The pipeline will leverage jobs as defined in [azure-pipeline.yaml](azure-pipeline.yaml) 

| Job                   | Type                          |
| --------------------- | ----------------------------- |
{% if tech_stack == 'java' or tech_stack == 'javascript' or tech_stack == 'asp_dotnet_framework' or tech_stack == 'dotnet_core' %}
| Build                 | {{ stack_build_tool.capitalize() }} |
{% endif %}
{% if tech_stack == 'python' %}
| UnitTest              | Pytest                        |
{% endif %}
| Composition Analysis  | Black duck Dependency scan    |
| Code Quality          | Sonar                         |
{% if azure_artifacts == 'True' %}
| Publish               | Azure Artifacts               |
{% endif %}
{% if docker_build == 'True' %}
| Build/Publish         | Docker                        |
{% endif %}
| Deploy                | {{ deployment_tool }}         | 
| Functional Test       | {{ functional_test_tool }}    | 
| Performance Test      | {{ performance_test_tool }}   | 
| API test type         | {{ api_test_tool }}           | 


## Azure task  Configuration Documentaion 

| Task                  | Type                                                                                                                                  |
| --------------------- | ------------------------------------------------------------------------------------------------------------------------------------- |
{% if stack_build_tool == 'maven' %}
|  Build                | [Maven](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/maven?view=azure-devops)                                  |
{% endif %}
{% if stack_build_tool == 'ant' %}
|  Build                | [Ant](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/ant?view=azure-devops)                                      |
{% endif %}
{% if stack_build_tool == 'npm' %}
|  Build                | [Npm](https://docs.npmjs.com/cli/v7/commands/npm)                                                                                     |
{% endif %}
{% if stack_build_tool == 'vsbuild' %}
|  Build                | [VSBuild](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/visual-studio-build?view=azure-devops)                  |
| UnitTest              | [VSTest](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/test/vstest?view=azure-devops)                                 |
{% endif %}
{% if stack_build_tool == 'msbuild' %}
|  Build                | [MSBuild](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/msbuild?view=azure-devops)|
{% endif %}
{% if tech_stack == 'python' %}
|  UnitTest             | [Pytest](https://docs.pytest.org/en/6.2.x/usage.html)                                                                                 |
{% endif %}
| Composition Analysis  | [Black duck](https://myconfluence.gsk.com/display/CORETECHDEVOPS/Black+Duck+Running+Scans)                                            |
| Code Quality| [Sonar Scanner](https://docs.sonarqube.org/latest/analysis/azuredevops-integration/)                                                            |
{% if azure_artifacts == 'True' %}
| Publish               | [Azure Artifacts](https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/universal-packages?view=azure-devops&tabs=yaml)   |
{% endif %}
{% if docker_build == 'True' %}
| Docker                | [Build Image](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/docker?view=azure-devops)                           |
{% endif %}
{% if deployment_tool == 'kubernetes' %}
| Deploy                | [Kubernetes](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/kubernetes-manifest?view=azure-devops)              |
{% endif %}
{% if deployment_tool == 'linux_binary_copy)' %}
| Deploy                | [SSH](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/ssh?view=azure-devops)                                     |
{% endif %}
{% if deployment_tool == 'windows_binary_copy)' %}
| Deploy                | [Powershell](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/powershell?view=azure-devops)                      |
{% endif %}
{% if functional_test_tool == 'torchbearer' %}
| Functional Test       | [Torchbearer](https://myconfluence.gsk.com/display/RnDTOSS/Torchbearer+Test+Automation+Framework)                                     |
{% endif %}
{% if functional_test_tool == 'autoit' %}
| Functional Test       | [AutoIt](https://myconfluence.gsk.com/display/RnDTOSS/Auto+IT+config+for+Pipegen+Framework)                                     |
{% endif %}
{% if functional_test_tool == 'uft_alm' %}
| Functional Test       | [UFT](https://myconfluence.gsk.com/display/RnDTOSS/UFT+config+for+Pipegen+Framework)                                     |
{% endif %}
{% if api_test_tool == 'postman' %}                                                                                                                               
| Api Test              | [Postman](https://myconfluence.gsk.com/display/RnDTOSS/API+Testing)                                                                   |
{% endif %}  
{% if api_test_tool == 'soapui' %}
| Api Test              | [SoapUI](https://myconfluence.gsk.com/display/RnDTOSS/API+Testing)                                                                    |
{% endif %}  
{% if api_test_tool == 'rest_assured' %}
| Api Test              | [Rest Assured](https://myconfluence.gsk.com/display/RnDTOSS/API+Testing)                                                              |
{% endif %}
