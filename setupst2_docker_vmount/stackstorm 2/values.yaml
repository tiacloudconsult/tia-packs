stackstorm-ha:
  st2:
    username: st2admin
    password: Admin@123
  st2actionrunner:
    envFromSecrets:
    - vault-data
    postStartScript: |
      apt update --fix-missing
      apt install unzip -y
      
      mkdir -p /packs-workdir/toolpackages/
      cd /packs-workdir/toolpackages/

      # Install Terraform (v1.1.7)
      curl "https://releases.hashicorp.com/terraform/1.1.7/terraform_1.1.7_linux_amd64.zip" -o /packs-workdir/toolpackages/terraform_1_1_7.zip
      unzip -o /packs-workdir/toolpackages/terraform_1_1_7.zip
      chmod 755 terraform
      mv terraform /usr/bin/
      rm -rf /packs-workdir/toolpackages/terraform_1_1_7.zip

      # Install Helm 
      curl -fsSL -o /packs-workdir/toolpackages/get_helm.sh "https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3"
      chmod 700 get_helm.sh
      ./get_helm.sh

      # Install ArgoCD
      wget "https://github.com/argoproj/argo-cd/releases/download/v2.2.5/argocd-linux-amd64" -O /packs-workdir/toolpackages/argocd
      chmod 777 argocd
      mv argocd /usr/bin/

      # Install Kubectl  
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      install -o root -g root -m 0755 kubectl /usr/bin/kubectl

      # Install Kubelogin (v0.0.25)
      curl -LO "https://github.com/Azure/kubelogin/releases/download/v0.0.25/kubelogin-linux-amd64.zip"
      unzip -o /packs-workdir/toolpackages/kubelogin-linux-amd64.zip
      mv bin/linux_amd64/kubelogin /usr/bin/
      rm -rf /packs-workdir/toolpackages/kubelogin-linux-amd64.zip
      rm -rf /packs-workdir/toolpackages/bin
      
      # Install Reportlab
      apt install python3-pip -y
      pip3 install --upgrade pip setuptools wheel
      pip3 install reportlab
      
      # Install Azure CLI
      curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    extra_volumes: 
    - name: packs-workdir
      mount:
        mountPath: "/packs-workdir"
        readOnly: false
      volume:
        persistentVolumeClaim:
          claimName: st2-packs-workdir
    - name: vault-data
      volume:
        secret:
          secretName: vault-data
      mount: # Only mounting the secret in order to avoid triggering a "required" directive on the deployments.yaml
        mountPath: "/vault-data"
    - name: packs
      mount:
        mountPath: "/opt/stackstorm/packs"
        readOnly: false
      volume:
        persistentVolumeClaim:
          claimName: st2-packs
    - name: packs-configs
      mount:
        mountPath: "/opt/stackstorm/configs"
        readOnly: false
      volume:
        persistentVolumeClaim:
          claimName: st2-packs-config
    - name: venvs
      mount:
        mountPath: "/opt/stackstorm/virtualenvs"
        readOnly: false
      volume:
        persistentVolumeClaim:
          claimName: st2-venvs
    - name: packs-source
      mount:
        mountPath: "/opt/stackstorm/packs-source"
        readOnly: false
      volume:
        persistentVolumeClaim:
          claimName: st2-packs-source
  st2api:
    extra_volumes:
    - name: packs-workdir
      mount:
        mountPath: "/packs-workdir"
        readOnly: false
      volume:
        persistentVolumeClaim:
          claimName: st2-packs-workdir
    - name: vault-data
      volume:
        secret:
          secretName: vault-data
      mount: # Only mounting the secret in order to avoid triggering a "required" directive on the deployments.yaml
        mountPath: "/vault-data"
    - name: packs
      mount:
        mountPath: "/opt/stackstorm/packs"
        readOnly: false
      volume:
        persistentVolumeClaim:
          claimName: st2-packs
    - name: packs-configs
      mount:
        mountPath: "/opt/stackstorm/configs"
        readOnly: false
      volume:
        persistentVolumeClaim:
          claimName: st2-packs-config
    - name: venvs
      mount:
        mountPath: "/opt/stackstorm/virtualenvs"
        readOnly: false
      volume:
        persistentVolumeClaim:
          claimName: st2-venvs
  jobs:
    annotations: 
      argocd.argoproj.io/hook: PostSync
      argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
