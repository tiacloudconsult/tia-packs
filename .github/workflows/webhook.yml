name: Deliver webhook on push to main
on:
  workflow_dispatch:
    inputs:
      git_branch:
        type: choice
        description: 'Git Branch Name'
        required: true
        default: 'argocd-jinja2-crossplane-tf-demo'
        options:
          - argocd-jinja2-crossplane-tf-demo
          - main
          - dev
          - st2-dev
      config_template:
        type: string
        default: 'config.j2'
        description: Config Template Name
      config_file:
        type: string
        default: 'config.yml'
      yaml_template:
        type: string
        default: 'namespace_config.j2'
      yaml_file:
        type: string
        default: 'namespaces.yaml'
      teamName:
        type: string
        default: 'fork'
      server:
        type: string
        default: 'test3'
      environment:
        type: choice
        default: 'dev-dev'
        options:
          - dev-dev
          - prod
          - QA
          - UAT
      token:
        type: string
        default: 'hello'
      ca:
        type: string
        default: 'yea'
        required: true
jobs:
  Git-Sync-Feature-to-StackStorm:
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
      - name: Azure CLI
        uses: azure/CLI@v1
        id: GetSecretValueWithCLI
        with:
          inlineScript: |
            echo "SECRET_VALUE=$(az keyvault secret show --name "st2-api-key-dev" --vault-name "argocd-tfs-kvault" --query "value")" >> $GITHUB_ENV
      - name: Send webhook request
        if: ${{inputs.git_branch}}
        run: |
          curl -X POST http://st2.dev.tiacloud.io/api/v1/webhooks/argocd_trigger \
          -H "Content-Type: application/json" \
          -H "St2-Api-Key: ${{ env.SECRET_VALUE }}" \
          -d \
          '{
                "git_branch": ${{inputs.git_branch}},
                "config_template": ${{inputs.config_template}},
                "config_file": ${{inputs.config_file}},
                "yaml_template": ${{inputs.yaml_template}},
                "yaml_file": ${{inputs.yaml_file}},
                "input_vars": {
                  "teamName": ${{inputs.teamName}},
                  "server": ${{inputs.server}},
                  "environment": ${{inputs.environment}},
                  "token": ${{inputs.token}},
                  "ca": ${{inputs.ca}}
            }
          }'
          
          

