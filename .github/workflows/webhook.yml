name: Deliver webhook on push to main
on:
  push:
    branches:
      - main
jobs:
  Git-Sync-Feature-to-StackStorm:
    inputs:
      git_branch:
        description: 'The Git branch to use.'
        required: true
      config_template:
        description: 'The name of the configuration template.'
        required: true
      config_file:
        description: 'The name of the configuration file.'
        required: true
      yaml_template:
        description: 'The name of the YAML template file.'
        required: true
      yaml_file:
        description: 'The name of the YAML file.'
        required: true
      teamName:
        description: 'The name of the team.'
        required: true
      server:
        description: 'The server name.'
        required: true
      environment:
        description: 'The environment.'
        required: true
      token:
        description: 'The token.'
        required: true
      ca:
        description: 'The ca.'
        required: true
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
      - name: Azure CLI
        uses: azure/CLI@v1
        id: GetSecretValueWithCLI
        with:
          inlineScript: |
            echo "SECRET_VALUE=$(az keyvault secret show --name "st2-api-key-dev" --vault-name "argocd-tfs-kvault" --query "value")" >> $GITHUB_ENV
      - name: Send webhook request
        run: |
          curl -X POST http://st2.dev.tiacloud.io/api/v1/webhooks/argocd_trigger \
          -H "Content-Type: application/json" \
          -H "St2-Api-Key: ${{ env.SECRET_VALUE }}" \
          -d \
          '{
                "git_branch": "argocd-jinja2-crossplane-tf-demo",
                "config_template": "config.j2",
                "config_file": "config.yml",
                "yaml_template": "namespace_config.j2",
                "yaml_file": "namespaces.yaml",
                "input_vars": {
                  "teamName": "fork",
                  "server": "test3",
                  "environment": "dev-dev",
                  "token": "hello",
                  "ca": "yea"
            }
          }'
          
          

